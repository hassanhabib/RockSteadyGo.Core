// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RockSteadyGo.Core.Api.Brokers.Storages;

#nullable disable

namespace RockSteadyGo.Core.Api.Migrations
{
    [DbContext(typeof(StorageBroker))]
    [Migration("20221014172820_AddMoves")]
    partial class AddMoves
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RockSteadyGo.Core.Api.Models.Matches.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f1cc8633-6999-40f2-90b5-4b37c824318f"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("e4fc700e-a737-40e9-82d8-ffb85795ea61"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("445b3d2c-2d69-4ae0-9b0a-269c213c35d1"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("RockSteadyGo.Core.Api.Models.Moves.Move", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("LocationX")
                        .HasColumnType("int");

                    b.Property<int>("LocationY")
                        .HasColumnType("int");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Moves");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0c7da2e-ac6b-46f5-9688-678842d24281"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 0, 5, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 0,
                            LocationY = 2,
                            MatchId = new Guid("f1cc8633-6999-40f2-90b5-4b37c824318f"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("c0c7da2e-ac6b-46f5-9688-678842d24282"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 0, 10, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 2,
                            LocationY = 0,
                            MatchId = new Guid("f1cc8633-6999-40f2-90b5-4b37c824318f"),
                            PlayerId = new Guid("edaf90dc-1e0f-4d6c-9871-93148f081b1c"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("c0c7da2e-ac6b-46f5-9688-678842d24283"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 0, 15, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 1,
                            LocationY = 2,
                            MatchId = new Guid("f1cc8633-6999-40f2-90b5-4b37c824318f"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("c0c7da2e-ac6b-46f5-9688-678842d24284"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 0, 20, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 2,
                            LocationY = 2,
                            MatchId = new Guid("f1cc8633-6999-40f2-90b5-4b37c824318f"),
                            PlayerId = new Guid("edaf90dc-1e0f-4d6c-9871-93148f081b1c"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("c0c7da2e-ac6b-46f5-9688-678842d24285"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 0, 25, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 2,
                            LocationY = 1,
                            MatchId = new Guid("f1cc8633-6999-40f2-90b5-4b37c824318f"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("c0c7da2e-ac6b-46f5-9688-678842d24286"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 0, 30, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 1,
                            LocationY = 1,
                            MatchId = new Guid("f1cc8633-6999-40f2-90b5-4b37c824318f"),
                            PlayerId = new Guid("edaf90dc-1e0f-4d6c-9871-93148f081b1c"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("c0c7da2e-ac6b-46f5-9688-678842d24287"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 0, 35, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 1,
                            LocationY = 0,
                            MatchId = new Guid("f1cc8633-6999-40f2-90b5-4b37c824318f"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("c0c7da2e-ac6b-46f5-9688-678842d24288"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 0, 40, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 0,
                            LocationY = 1,
                            MatchId = new Guid("f1cc8633-6999-40f2-90b5-4b37c824318f"),
                            PlayerId = new Guid("edaf90dc-1e0f-4d6c-9871-93148f081b1c"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("c0c7da2e-ac6b-46f5-9688-678842d24289"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 0, 45, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 0,
                            LocationY = 0,
                            MatchId = new Guid("f1cc8633-6999-40f2-90b5-4b37c824318f"),
                            PlayerId = new Guid("edaf90dc-1e0f-4d6c-9871-93148f081b1c"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("a7c37018-3459-49cb-852f-20a74eed4ef1"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 5, 5, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 0,
                            LocationY = 2,
                            MatchId = new Guid("e4fc700e-a737-40e9-82d8-ffb85795ea61"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("a7c37018-3459-49cb-852f-20a74eed4ef2"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 5, 10, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 2,
                            LocationY = 0,
                            MatchId = new Guid("e4fc700e-a737-40e9-82d8-ffb85795ea61"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("a7c37018-3459-49cb-852f-20a74eed4ef3"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 5, 15, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 1,
                            LocationY = 2,
                            MatchId = new Guid("e4fc700e-a737-40e9-82d8-ffb85795ea61"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("a7c37018-3459-49cb-852f-20a74eed4ef4"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 5, 20, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 2,
                            LocationY = 2,
                            MatchId = new Guid("e4fc700e-a737-40e9-82d8-ffb85795ea61"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("a7c37018-3459-49cb-852f-20a74eed4ef5"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 5, 25, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 2,
                            LocationY = 1,
                            MatchId = new Guid("e4fc700e-a737-40e9-82d8-ffb85795ea61"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("a7c37018-3459-49cb-852f-20a74eed4ef6"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 5, 30, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 1,
                            LocationY = 1,
                            MatchId = new Guid("e4fc700e-a737-40e9-82d8-ffb85795ea61"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("a7c37018-3459-49cb-852f-20a74eed4ef7"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 5, 35, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 1,
                            LocationY = 0,
                            MatchId = new Guid("e4fc700e-a737-40e9-82d8-ffb85795ea61"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("a7c37018-3459-49cb-852f-20a74eed4ef8"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 5, 40, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 0,
                            LocationY = 1,
                            MatchId = new Guid("e4fc700e-a737-40e9-82d8-ffb85795ea61"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("a7c37018-3459-49cb-852f-20a74eed4ef9"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 5, 45, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 0,
                            LocationY = 0,
                            MatchId = new Guid("e4fc700e-a737-40e9-82d8-ffb85795ea61"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("1da5dc08-1294-459e-8c63-e3d846acd170"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 2, 2, 0, 10, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            LocationX = 0,
                            LocationY = 2,
                            MatchId = new Guid("445b3d2c-2d69-4ae0-9b0a-269c213c35d1"),
                            PlayerId = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            Type = 1
                        });
                });

            modelBuilder.Entity("RockSteadyGo.Core.Api.Models.Players.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca66ac15-7b4f-4a4a-a51d-337983545900"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Hassan Habib",
                            Username = "hhabib"
                        },
                        new
                        {
                            Id = new Guid("edaf90dc-1e0f-4d6c-9871-93148f081b1c"),
                            CreatedDate = new DateTimeOffset(new DateTime(2020, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Etienne Cowley",
                            Username = "ecowley"
                        });
                });

            modelBuilder.Entity("RockSteadyGo.Core.Api.Models.Moves.Move", b =>
                {
                    b.HasOne("RockSteadyGo.Core.Api.Models.Matches.Match", "Match")
                        .WithMany("Moves")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RockSteadyGo.Core.Api.Models.Players.Player", "Player")
                        .WithMany("Moves")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("RockSteadyGo.Core.Api.Models.Matches.Match", b =>
                {
                    b.Navigation("Moves");
                });

            modelBuilder.Entity("RockSteadyGo.Core.Api.Models.Players.Player", b =>
                {
                    b.Navigation("Moves");
                });
#pragma warning restore 612, 618
        }
    }
}
